{"version":3,"sources":["Components/ColorPicker.js","Components/Reset.js","Components/Result.js","Components/SizeSetting.js","App.js","reportWebVitals.js","index.js"],"names":["ColorPicker","props","state","colors","color","backgroundColor","this","onReceiveColor","elmColors","map","index","style","showColor","className","onClick","setActiveColor","Component","Reset","onSettingDefault","type","Result","borderColor","fontSize","id","setStyle","SizeSetting","value","onChangeSize","changeSize","App","onSetColor","bind","params","setState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b5feb674.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nclass ColorPicker extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            colors : ['red', 'green', 'blue','#ccc']\r\n        };\r\n    }\r\n\r\n    showColor (color){\r\n        return{\r\n            backgroundColor : color\r\n        };\r\n    }\r\n\r\n    setActiveColor(color){\r\n        this.props.onReceiveColor(color);\r\n    }\r\n\r\n    render() {\r\n\r\n        var elmColors = this.state.colors.map((color, index) => {\r\n            return <span \r\n                        key={index} \r\n                        style={ this.showColor(color) }\r\n                        className={this.props.color === color ? 'active' : ''}\r\n                        onClick={ () => this.setActiveColor(color)}\r\n                    ></span>\r\n        })\r\n\r\n        return (\r\n            <div className=\"paner paner-primary\">\r\n                <div className=\"paner-heading\">\r\n                    <h3 className=\"paner-title\">Color Picker</h3>\r\n                </div>\r\n                <div className=\"paner-body\">\r\n                    {elmColors}   \r\n                   <hr/>\r\n                </div>\r\n            </div>\r\n        );\r\n  \r\n    }\r\n}\r\n\r\nexport default ColorPicker;\r\n","import React, {Component} from 'react';\r\n\r\nclass Reset extends Component{\r\n\r\n    onSettingDefault = () => {\r\n        this.props.onSettingDefault(true);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <button \r\n                type=\"button\" \r\n                className=\"btn btn-primary\"\r\n                onClick={this.onSettingDefault}\r\n            >reset</button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Reset;\r\n","import React, {Component} from 'react';\r\n\r\nclass Result extends Component{\r\n\r\n    setStyle(){\r\n        return{\r\n            color: this.props.color,\r\n            borderColor:this.props.color,\r\n            fontSize: this.props.fontSize\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n                <div className=\"notify\">\r\n                    <p className=\"title-text\">Bạn đã chọn:</p>\r\n                    <p className=\"title-text\">\r\n                        Color : {this.props.color}\r\n                    </p>\r\n                    <p className=\"title-text\">Fontsize : {this.props.fontSize}px</p>\r\n                </div>\r\n                <div id=\"content\" style={this.setStyle()}>\r\n                    Nội dung setting\r\n                </div>\r\n            </div>\r\n        );\r\n  \r\n    }\r\n}\r\n\r\nexport default Result;\r\n","import React, {Component} from 'react';\r\n\r\nclass SizeSetting extends Component{\r\n\r\n    changeSize(value){\r\n        this.props.onChangeSize(value);\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"paner paner-warning\">\r\n                <div className=\"paner-heading\">\r\n                    <h3 className=\"paner-title\">Size: {this.props.fontSize} px</h3>\r\n                </div>\r\n                <div className=\"paner-body\">\r\n                    <button \r\n                        type=\"button\" \r\n                        className=\"btn btn-success\"\r\n                        onClick={() => this.changeSize(-2)}\r\n                    >\r\n                        Giảm\r\n                    </button>&nbsp;\r\n                    <button \r\n                        type=\"button\" \r\n                        className=\"btn btn-success\"\r\n                        onClick={() => this.changeSize(+2)}\r\n                    >\r\n                        Tăng\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n  \r\n    }\r\n}\r\n\r\nexport default SizeSetting;\r\n","import React, {Component} from 'react';\nimport './App.css';\nimport ColorPicker from './Components/ColorPicker.js';\nimport Reset from './Components/Reset.js';\nimport Result from './Components/Result.js';\nimport SizeSetting from './Components/SizeSetting.js';\n\nclass App extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            color :'red',\n            fontSize : 12\n        };\n        this.onSetColor = this.onSetColor.bind(this);\n        this.onChangeSize = this.onChangeSize.bind(this);\n        this.onSettingDefault = this.onSettingDefault.bind(this);\n    }\n\n    onSetColor(params){\n        this.setState({\n            color:params\n        });\n    }\n\n    onChangeSize(value){\n        this.setState({\n            fontSize : (this.state.fontSize + value >= 8 && this.state.fontSize + value <= 36) ? this.state.fontSize + value : this.state.fontSize\n        });\n    }\n\n    onSettingDefault(value){\n        if(value){\n            this.setState({\n                color :'red',\n                fontSize : 15\n            });\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"container mt-50\">\n                <div className=\"row\">\n                    <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\n                        <ColorPicker \n                            color={this.state.color} \n                            onReceiveColor={this.onSetColor}\n                        />\n                    </div>\n                    <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\n                        <SizeSetting \n                            fontSize={this.state.fontSize}\n                            onChangeSize={this.onChangeSize}\n                        />\n                        <Reset\n                            onSettingDefault={this.onSettingDefault}\n                        />\n                    </div>\n                    <Result \n                        color={this.state.color} \n                        fontSize={this.state.fontSize}\n                    />\n                </div>\n            </div>\n        );\n  \n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}